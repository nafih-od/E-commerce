# Generated by Django 5.2.1 on 2025-06-02 04:40

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Refrigerator',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=50)),
                ('capacity', models.DecimalField(decimal_places=2, help_text='Capacity in cubic feet', max_digits=5)),
                ('door_style', models.CharField(help_text='e.g., French Door, Side-by-Side', max_length=50)),
                ('energy_rating', models.CharField(help_text='e.g., A++, A+', max_length=5)),
                ('has_water_dispenser', models.BooleanField(default=False)),
                ('has_ice_maker', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='Refrigerator_images/')),
            ],
        ),
        migrations.CreateModel(
            name='AC',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('custom_order', models.BigIntegerField(blank=True, null=True)),
                ('alt_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('is_display', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('brand', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('type', models.CharField(choices=[('Split', 'Split'), ('Window', 'Window'), ('Portable', 'Portable')], max_length=50)),
                ('capacity', models.DecimalField(decimal_places=2, help_text='Capacity in Tons', max_digits=4)),
                ('energy_rating', models.CharField(choices=[('3 Star', '3 Star'), ('5 Star', '5 Star')], max_length=10)),
                ('features', models.TextField(blank=True)),
                ('noise_level', models.DecimalField(decimal_places=2, help_text='Noise in dB', max_digits=4)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='ac_images/')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deleted_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AC',
                'verbose_name_plural': 'ACs',
                'db_table': 'products_ac',
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('custom_order', models.BigIntegerField(blank=True, null=True)),
                ('alt_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('is_display', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('brand', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('type', models.CharField(choices=[('Bluetooth', 'Bluetooth'), ('Wired', 'Wired')], max_length=50)),
                ('connectivity', models.CharField(choices=[('Bluetooth', 'Bluetooth'), ('AUX', 'AUX'), ('USB', 'USB'), ('Wi-Fi', 'Wi-Fi')], max_length=50)),
                ('power_source', models.CharField(choices=[('Battery', 'Battery'), ('Wired', 'Wired')], max_length=50)),
                ('frequency_range', models.CharField(max_length=50)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=5)),
                ('features', models.TextField(blank=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='speaker_images/')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deleted_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Speaker',
                'verbose_name_plural': 'Speakers',
                'db_table': 'products_speaker',
            },
        ),
        migrations.CreateModel(
            name='TV',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('auto_id', models.PositiveIntegerField(db_index=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('custom_order', models.BigIntegerField(blank=True, null=True)),
                ('alt_txt', models.CharField(blank=True, max_length=250, null=True)),
                ('is_display', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('brand', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('screen_size', models.DecimalField(decimal_places=2, max_digits=5)),
                ('resolution', models.CharField(max_length=50)),
                ('panel_type', models.CharField(max_length=50)),
                ('smart_tv', models.BooleanField(default=False)),
                ('hdmi_ports', models.PositiveIntegerField()),
                ('usb_ports', models.PositiveIntegerField()),
                ('refresh_rate', models.PositiveIntegerField(help_text='In Hz')),
                ('operating_system', models.CharField(max_length=50)),
                ('energy_rating', models.CharField(max_length=10)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deleted_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='updated_by_%(class)s_objects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'TV',
                'verbose_name_plural': 'TVs',
                'db_table': 'products_tv',
            },
        ),
    ]
