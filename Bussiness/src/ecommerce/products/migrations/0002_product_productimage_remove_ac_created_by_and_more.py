# Generated by Django 5.2.1 on 2025-06-02 07:04

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('product_type', models.CharField(choices=[('TV', 'TV'), ('Speaker', 'Speaker'), ('Refrigerator', 'Refrigerator'), ('AC', 'AC')], max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('brand', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('screen_size', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('resolution', models.CharField(blank=True, max_length=50, null=True)),
                ('panel_type', models.CharField(blank=True, max_length=50, null=True)),
                ('smart_tv', models.BooleanField(blank=True, null=True)),
                ('hdmi_ports', models.PositiveIntegerField(blank=True, null=True)),
                ('usb_ports', models.PositiveIntegerField(blank=True, null=True)),
                ('refresh_rate', models.PositiveIntegerField(blank=True, help_text='In Hz', null=True)),
                ('operating_system', models.CharField(blank=True, max_length=50, null=True)),
                ('tv_energy_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('speaker_type', models.CharField(blank=True, choices=[('Bluetooth', 'Bluetooth'), ('Wired', 'Wired')], max_length=50, null=True)),
                ('connectivity', models.CharField(blank=True, choices=[('Bluetooth', 'Bluetooth'), ('AUX', 'AUX'), ('USB', 'USB'), ('Wi-Fi', 'Wi-Fi')], max_length=50, null=True)),
                ('power_source', models.CharField(blank=True, choices=[('Battery', 'Battery'), ('Wired', 'Wired')], max_length=50, null=True)),
                ('frequency_range', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('speaker_features', models.TextField(blank=True, null=True)),
                ('speaker_release_date', models.DateField(blank=True, null=True)),
                ('speaker_image', models.ImageField(blank=True, null=True, upload_to='speaker_images/')),
                ('capacity', models.DecimalField(blank=True, decimal_places=2, help_text='Capacity in cubic feet', max_digits=5, null=True)),
                ('door_style', models.CharField(blank=True, help_text='e.g., French Door, Side-by-Side', max_length=50, null=True)),
                ('refrigerator_energy_rating', models.CharField(blank=True, max_length=5, null=True)),
                ('has_water_dispenser', models.BooleanField(blank=True, null=True)),
                ('has_ice_maker', models.BooleanField(blank=True, null=True)),
                ('refrigerator_image', models.ImageField(blank=True, null=True, upload_to='refrigerator_images/')),
                ('ac_type', models.CharField(blank=True, choices=[('Split', 'Split'), ('Window', 'Window'), ('Portable', 'Portable')], max_length=50, null=True)),
                ('ac_capacity', models.DecimalField(blank=True, decimal_places=2, help_text='Capacity in Tons', max_digits=4, null=True)),
                ('ac_energy_rating', models.CharField(blank=True, choices=[('3 Star', '3 Star'), ('5 Star', '5 Star')], max_length=10, null=True)),
                ('ac_features', models.TextField(blank=True, null=True)),
                ('noise_level', models.DecimalField(blank=True, decimal_places=2, help_text='Noise in dB', max_digits=4, null=True)),
                ('ac_release_date', models.DateField(blank=True, null=True)),
                ('ac_image', models.ImageField(blank=True, null=True, upload_to='ac_images/')),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images/')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
        ),
        migrations.RemoveField(
            model_name='ac',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='ac',
            name='deleted_by',
        ),
        migrations.RemoveField(
            model_name='ac',
            name='updated_by',
        ),
        migrations.DeleteModel(
            name='Refrigerator',
        ),
        migrations.RemoveField(
            model_name='speaker',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='speaker',
            name='deleted_by',
        ),
        migrations.RemoveField(
            model_name='speaker',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='tv',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='tv',
            name='deleted_by',
        ),
        migrations.RemoveField(
            model_name='tv',
            name='updated_by',
        ),
        migrations.DeleteModel(
            name='AC',
        ),
        migrations.DeleteModel(
            name='Speaker',
        ),
        migrations.DeleteModel(
            name='TV',
        ),
    ]
